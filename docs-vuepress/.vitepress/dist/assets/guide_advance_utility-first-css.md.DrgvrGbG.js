import{_ as t,c as s,o as i,a7 as e}from"./chunks/framework.CwvFaCp2.js";const E=JSON.parse('{"title":"使用原子类","description":"","frontmatter":{},"headers":[],"relativePath":"guide/advance/utility-first-css.md","filePath":"guide/advance/utility-first-css.md"}'),l={name:"guide/advance/utility-first-css.md"},a=e(`<h1 id="使用原子类" tabindex="-1">使用原子类 <a class="header-anchor" href="#使用原子类" aria-label="Permalink to &quot;使用原子类&quot;">​</a></h1><p>原子类(utility-first CSS)是近几年流行起来的一种全新的样式开发方式，在前端社区内取得了良好的口碑，越来越多的主流网站也基于原子类进行开发，我们耳熟能详的有<a href="https://github.com/" target="_blank" rel="noreferrer">Github</a>，<a href="https://openai.com/" target="_blank" rel="noreferrer">OpenAI</a>，<a href="https://top10.netflix.com/" target="_blank" rel="noreferrer">Netflix</a> 和<a href="https://www.jpl.nasa.gov/" target="_blank" rel="noreferrer">NASA官网</a> 等。使用原子类离不开原子类框架的支持，常用的原子类框架有 <a href="https://tailwindcss.com/" target="_blank" rel="noreferrer">Tailwindcss</a>、<a href="https://windicss.org/" target="_blank" rel="noreferrer">Windicss</a> 和 <a href="https://unocss.dev/" target="_blank" rel="noreferrer">Unocss</a> 等，而在 <strong>Mpx2.9</strong> 以后，我们在框架中内置了基于 unocss 的原子类支持，让小程序开发也能使用原子类。对项目进行简单配置开启原子类支持后，用户就可以在 Mpx 页面/组件模板中直接使用一些预定义的基础样式类，诸如flex，pt-4，text-center 和 rotate-90 等，对样式进行组合定义，并且在 Mpx 支持的所有小程序平台和 web 平台中正常运行，下面是一个简单示例：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;flex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;py-8 px-8 inline-flex mx-auto bg-white rounded-xl shadow-md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-center&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-base text-black font-semibold mb-2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          Erin Lindford</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-gray-500 font-medium pb-3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          Product Engineer</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mt-2 px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-solid border-purple-200&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          Message</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>通过这种方式，我们在不编写任何自定义样式代码的情况下得到了一张简单的个人卡片，实际渲染效果如下：</p><p><img src="https://dpubstatic.udache.com/static/dpubimg/Or3aaN-mmxV8pK-LmEVPm_demo.png" alt="utility-css-demo"></p><p>相较于传统的自定义类编写样式的方式，使用原子类能给你带来以下这些好处：</p><ul><li><strong>不用再烦恼于为自定义类取类名</strong>，传统样式开发中，我们仅仅是为某个元素定义样式就需要绞尽脑汁发明一些抽象的类名，还得提防类名冲突，使用原子类可以完全将你从这种琐碎无趣的工作中解放；</li><li><strong>停止css体积的无序增长</strong>，传统样式开发中，css体积会随着你的迭代不断增长，而在原子类中，一切样式都可以复用，你几乎不需要编写新的css；</li><li><strong>让调整样式变得更加安全</strong>，传统css是全局的，当你修改某个样式时无法保障其不会破坏其他地方的样式，而你在模板中使用的原子类是本地的，你完全不用担心修改它会影响其他地方。</li></ul><p>而相较于使用内联样式，原子类也有一些重要的优势：</p><ul><li><strong>约束下的设计</strong>，使用内联样式时，里面的每一个数值都是魔法数字(magic number) ，而通过原子工具类，你可以选择一些符合预定义设计规范的样式，便于构筑具有视觉一致性的UI；</li><li><strong>响应式设计</strong>，你无法在内联样式中使用媒体查询，然而通过原子类框架中提供的响应式工具，你可以轻而易举地构建出响应式界面；</li><li><strong>Hover、focus和其他状态</strong>，使用内联样式无法定义特定状态下的样式，如hover和focus，通过原子类框架的状态变量能力，我们可以轻松为这些状态定义样式。</li></ul><p>看到这里相信你已经迫不及待地想要在 Mpx 中体验原子类开发了吧，可以根据下面的指南开启你的原子类之旅。</p><h2 id="compile-config" tabindex="-1">原子类环境配置 <a class="header-anchor" href="#compile-config" aria-label="Permalink to &quot;原子类环境配置 {#compile-config}&quot;">​</a></h2><p>如果你想在新项目中使用原子类，可以使用最新版本的 <code>@mpxjs/cli</code> 创建项目，在 prompt 中选择使用原子类，就可以在新创建的项目模版中直接使用 unocss 的原子类，关于可使用的工具类可参考 <a href="https://unocss.dev/interactive/" target="_blank" rel="noreferrer">unocss 交互示例</a>及本指南下方的<a href="#工具类支持范围">工具类支持范围</a>。</p><blockquote><p>与 web 中使用 unocss 不同，在 Mpx 中使用 unocss 不需要显式引入虚拟模块 <code>import &#39;uno.css&#39;</code> 来承载生成的样式内容，这是由于在 Mpx 中，我们充分考虑到小程序分包架构的特殊性和主包体积的重要性，结合 Mpx 强大的分包构建能力，对生成的原子工具类的使用情况进行分析，将其自动注入到合适的主包或者分包中，来达到全局体积分配的最优（在没有内容冗余的情况下尽可能输出到分包）。</p></blockquote><p>对于使用 <code>@mpxjs/cli@3.0</code> 新版脚手架创建的项目，可以在项目初始化时选择<code>需要使用原子类</code> 选项，或在已有项目下执行<code>mpx add @mpxjs/vue-cli-plugin-mpx-utility-first-css</code>以激活原子类相关编译配置。</p><p>对于使用旧版脚手架创建的项目，可以通过修改项目编译配置以激活原子类支持：</p><ol><li>安装相关依赖：</li></ol><div class="language-json5 vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //...</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;devDependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;@mpxjs/unocss-base&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;^2.9.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;@mpxjs/unocss-plugin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;^2.9.0&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="2"><li>新建uno.config.js，基础配置内容如下：</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;unocss&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> presetMpx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@mpxjs/unocss-base&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  presets: [</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    presetMpx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><ol start="3"><li>注册<code>MpxUnocssPlugin</code>，在<code>build/getPlugins</code>中添加如下代码：</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MpxUnocssPlugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@mpxjs/unocss-plugin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MpxUnocssPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>即可在项目模版中使用基于<code>unocss</code>的原子类功能，<code>unocss</code>默认的preset兼容<code>tailwindcss</code>/<code>windicss</code> ，可以通过查阅<a href="https://tailwindcss.com/docs/installation" target="_blank" rel="noreferrer">tailwindcss文档</a>、<a href="https://windicss.org/utilities/general/colors.html" target="_blank" rel="noreferrer">windicss文档</a>或<a href="https://unocss.dev/interactive/" target="_blank" rel="noreferrer">unocss可交互文档</a>进行探索使用。</p><p>关于<code>uno.config.js</code>可用配置项及<code>@mpxjs/unocss-plugin</code>及<code>@mpxjs/unocss-base</code>的配置项请参考<a href="./../../api/compile.html#mpxunocssplugin-配置">API文档</a></p><h3 id="vscode插件支持" tabindex="-1">vscode插件支持 <a class="header-anchor" href="#vscode插件支持" aria-label="Permalink to &quot;vscode插件支持&quot;">​</a></h3><p>推荐使用unocss官方插件<a href="https://unocss.dev/integrations/vscode" target="_blank" rel="noreferrer">https://unocss.dev/integrations/vscode</a> mpx文件则需要在unocss.config.js添加如下参数才能生效</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;unocss&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  include: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">mpx(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">$|</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\?</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="config-supports" tabindex="-1">功能支持范围 <a class="header-anchor" href="#config-supports" aria-label="Permalink to &quot;功能支持范围 {#config-supports}&quot;">​</a></h2><p>我们支持了<code>unocss</code>大部分的配置项及功能，并针对小程序技术规范提供了一些额外的功能支持，如分包输出和样式隔离等功能，以下为详细功能支持范围。</p><table tabindex="0"><thead><tr><th style="text-align:left;">功能</th><th style="text-align:left;">支持度</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">Load Config</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持windi默认的全部配置文件路径，并支持在plugin options中手动传入配置对象或配置文件路径</td></tr><tr><td style="text-align:left;">Rules</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Shortcuts</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Theme</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Variants</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Extractors</td><td style="text-align:left;">不支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Transformers</td><td style="text-align:left;">部分支持</td><td style="text-align:left;">内建支持variant groups、directives和alias，不支持自定义transformers</td></tr><tr><td style="text-align:left;">Preflights</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持内建和自定义preflight配置</td></tr><tr><td style="text-align:left;">Presets</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Safelist</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持全局配置和模版注释语法局部配置声明safelist</td></tr><tr><td style="text-align:left;">Value Auto-infer</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Variant Groups</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Directives</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Alias</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Attributify Mode</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序模版不支持不识别的自定义属性</td></tr><tr><td style="text-align:left;">Responsive Design</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Dark Mode</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Important Prefix</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Layers Ordering</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">分包输出/公共样式抽离</td><td style="text-align:left;">支持</td><td style="text-align:left;">可通过设置<code>@mpxjs/unocss-plugin</code>配置项<code>minCount</code>决定公共样式范围</td></tr><tr><td style="text-align:left;">组件分包异步/组件样式隔离</td><td style="text-align:left;">支持</td><td style="text-align:left;">可通过全局配置和模版注释语法局部配置<code>styleIsolation=&#39;isolated&#39;</code>支持相关场景的原子类使用</td></tr><tr><td style="text-align:left;">Rpx样式单位</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">小程序类名特殊字符转义</td><td style="text-align:left;">支持</td><td style="text-align:left;">静态类名和动态类名均以支持</td></tr><tr><td style="text-align:left;">跨平台输出</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持输出Mpx已支持的所有小程序平台及Web</td></tr></tbody></table><h2 id="utility-supports" tabindex="-1">工具类可用范围 <a class="header-anchor" href="#utility-supports" aria-label="Permalink to &quot;工具类可用范围 {#utility-supports}&quot;">​</a></h2><p>经过我们的详细测试，大部分<code>unocss</code> 提供的工具类都能在小程序环境下正常工作，但是也有部分工具类由于小程序底层环境差异无法正常运行，以下是详细的测试结果，参考<a href="https://windicss.org/utilities/general/colors.html" target="_blank" rel="noreferrer">windicss文档</a> 进行分类组织。</p><h3 id="general" tabindex="-1">General <a class="header-anchor" href="#general" aria-label="Permalink to &quot;General&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">功能</th><th style="text-align:left;">支持度</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">Colors</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Typography</td><td style="text-align:left;">部分支持</td><td style="text-align:left;">不支持子项：Font Variant Numeric Tab Size</td></tr><tr><td style="text-align:left;">SVG</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序不支持svg标签</td></tr><tr><td style="text-align:left;">Variants</td><td style="text-align:left;">部分支持</td><td style="text-align:left;">不支持子项：Child Selectors，因为小程序不支持*选择器</td></tr></tbody></table><h3 id="accessibility" tabindex="-1">Accessibility <a class="header-anchor" href="#accessibility" aria-label="Permalink to &quot;Accessibility&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">功能</th><th style="text-align:left;">支持度</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">Screen Readers</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="animations" tabindex="-1">Animations <a class="header-anchor" href="#animations" aria-label="Permalink to &quot;Animations&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">功能</th><th style="text-align:left;">支持度</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">Animation</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Transforms</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Transitions</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="backgrounds" tabindex="-1">Backgrounds <a class="header-anchor" href="#backgrounds" aria-label="Permalink to &quot;Backgrounds&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">功能</th><th style="text-align:left;">支持度</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">Background Attachment</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Background Clip</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Background Color</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Background Opacity</td><td style="text-align:left;">支持</td><td style="text-align:left;">需要和Background Color一起使用</td></tr><tr><td style="text-align:left;">Background Position</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Background Repeat</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Background Size</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Background Origin</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Gradient Direction</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Gradient From</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Gradient Via</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Gradient To</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Background Blend Mode</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="behaviors" tabindex="-1">Behaviors <a class="header-anchor" href="#behaviors" aria-label="Permalink to &quot;Behaviors&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">功能</th><th style="text-align:left;">支持度</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">Box Decoration Break</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Image Rendering</td><td style="text-align:left;">部分支持</td><td style="text-align:left;">image-render-edge 真机不支持</td></tr><tr><td style="text-align:left;">Listings</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Overflow</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Overscroll Behavior</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Placeholder</td><td style="text-align:left;">不支持</td><td style="text-align:left;">微信小程序 input 需要通过 placeholder-style 设置 placeholder 样式</td></tr></tbody></table><h3 id="borders" tabindex="-1">Borders <a class="header-anchor" href="#borders" aria-label="Permalink to &quot;Borders&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">功能</th><th style="text-align:left;">支持度</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">Border Radius</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Border Width</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Border Color</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Border Opacity</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Border Style</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Divider Width</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序不支持生成的css选择器</td></tr><tr><td style="text-align:left;">Divider Color</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序不支持生成的css选择器</td></tr><tr><td style="text-align:left;">Divider Opacity</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序不支持生成的css选择器</td></tr><tr><td style="text-align:left;">Divider Style</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序不支持生成的css选择器</td></tr><tr><td style="text-align:left;">Outline</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Outline Solid</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Outline Dotted</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Ring Width</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Ring Color</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Ring Opacity</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Ring Offset Width</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Ring Offset Color</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="effects" tabindex="-1">Effects <a class="header-anchor" href="#effects" aria-label="Permalink to &quot;Effects&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">功能</th><th style="text-align:left;">支持度</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">Box Shadow</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Opacity</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Mix Blend Mode</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="filters" tabindex="-1">Filters <a class="header-anchor" href="#filters" aria-label="Permalink to &quot;Filters&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">功能</th><th style="text-align:left;">支持度</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">Filter</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Backdrop Filter</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="interactivity" tabindex="-1">Interactivity <a class="header-anchor" href="#interactivity" aria-label="Permalink to &quot;Interactivity&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">功能</th><th style="text-align:left;">支持度</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">Accent Color</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序不支持生成的样式</td></tr><tr><td style="text-align:left;">Appearance</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序不支持生成的样式</td></tr><tr><td style="text-align:left;">Cursor</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序不支持生成的样式</td></tr><tr><td style="text-align:left;">Caret</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序不支持生成的样式</td></tr><tr><td style="text-align:left;">Pointer Events</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Resize</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序不支持生成的样式</td></tr><tr><td style="text-align:left;">Scroll Behavior</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序不支持生成的样式</td></tr><tr><td style="text-align:left;">Touch Action</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">User Select</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序不支持生成的样式</td></tr><tr><td style="text-align:left;">Will Change</td><td style="text-align:left;">不支持</td><td style="text-align:left;">小程序不支持生成的样式</td></tr></tbody></table><h3 id="layout" tabindex="-1">Layout <a class="header-anchor" href="#layout" aria-label="Permalink to &quot;Layout&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">功能</th><th style="text-align:left;">支持度</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">Columns</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Container</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Display</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Flex</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Grid</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Positioning</td><td style="text-align:left;">部分支持</td><td style="text-align:left;">小程序图片设置object-fit 无效，可使用mode代替</td></tr><tr><td style="text-align:left;">Sizing</td><td style="text-align:left;">支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Spacing</td><td style="text-align:left;">部分支持</td><td style="text-align:left;">Space Between小程序不支持生成的css选择器</td></tr><tr><td style="text-align:left;">Tables</td><td style="text-align:left;">部分支持</td><td style="text-align:left;">小程序不支持部分table样式</td></tr></tbody></table><h2 id="attentions" tabindex="-1">小程序原子类使用注意点 <a class="header-anchor" href="#attentions" aria-label="Permalink to &quot;小程序原子类使用注意点 {#attentions}&quot;">​</a></h2><p>小程序由于底层环境差异，我们在支持和使用原子类时有一些特殊的注意点。</p><h3 id="escape" tabindex="-1">特殊字符转义 <a class="header-anchor" href="#escape" aria-label="Permalink to &quot;特殊字符转义 {#escape}&quot;">​</a></h3><p>基于<code>unocss</code>的原子类支持<code>value auto-infer</code>（值自动推导），可以在模版中根据相关规则书写灵活的自定义值原子类，如<code>p-5px bg-[hsl(211.7,81.9%,69.6%)]</code>等，针对原子类中出现的<code>[</code> <code>(</code> <code>,</code>等特殊字符，在web中会通过转义字符<code>\\</code>进行转义，由于小程序环境下不支持css选择器中出现<code>\\</code>转义字符，我们内置支持了一套不带<code>\\</code>的转义规则对这些特殊字符进行转义，同时替换模版和css文件中的类名，内建的默认转义规则如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> escapeMap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;(&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_pl_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_pr_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;[&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_bl_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_br_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;{&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_cl_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_cr_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;#&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_h_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_i_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_s_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_d_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_c_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;,&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_2c_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_p_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_q_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;&quot;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_dq_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;+&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_a_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_si_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // unknown用于兜底不在上述范围中未知的转义字符</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    unknown: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_u_&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><p>与此同时，用户也可以通过传递<code>@mpxjs/unocss-plugin</code>的<a href="./../../api/compile.html#escapeMap"><code>escapeMap</code>配置项</a>来覆盖内建的转义规则。</p><h3 id="subpackage" tabindex="-1">原子类分包输出 <a class="header-anchor" href="#subpackage" aria-label="Permalink to &quot;原子类分包输出 {#subpackage}&quot;">​</a></h3><p>在web中，原子类会被全部打包输出单个样式文件，一般会放置在顶层样式表中以供全局访问，但在小程序中这种全量的输出策略并不是最优的，主要原因在于小程序中可供全局访问的主包体积存在<strong>2M大小限制</strong>，主包体积十分紧缺珍贵，Mpx在构建输出时遵循着分包优先的原则，尽可能充分利用分包体积从而减少对主包体积的占用，再进行原子类产物输出时，我们也遵循了相同的原则。</p><p>在Mpx中，我们在收集原子类时同时记录了每个原子类的引用分包，在收集结束后根据每个原子类的分包引用数量决定该原子类应该输出到主包还是分包当中，我们在<code>@mpxjs/unocss-plugin</code>中提供了<a href="./../../api/compile.html#minCount"><code>minCount</code>配置项</a>来决定分包的输出规则，该配置项的默认值为2，即当一个原子类被2个或以上分包引用时，会被作为公共原子类抽取到主包中，否则输出到所属分包中，这也是全局最优的策略。当我们想要让原子类输出产物更少地占用主包体积时，我们也可以将<code>minCount</code>值调大，让原子类抽取到主包的条件更加苛刻，不过这样也会伴随着原子类分包冗余的增加。</p><p><code>unocss.config.js</code>配置中定义的<code>safelist</code>原子类默认会输出到主包，为了组件局部使用的<code>safelist</code>有输出到分包的机会，我们在模版中提供了<a href="./../../api/compile.html#commentConfig"><code>注释配置</code></a>（comments config），灵感来源于<code>webpack</code>中的魔法注释（magic comments），用户可以在组件模版中通过<code>注释配置</code>声明当前组件所需的<code>safelist</code>，对应的原子类也会根据上述的规则输出到主包或分包中，使用示例如下：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- mpx_config_safelist: &#39;text-red-500 bg-blue-500&#39; --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- 动态样式中可以使用text-red-500和bg-blue-500原子类 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> wx:class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{classObj}}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;test&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="style-isolation" tabindex="-1">样式隔离与组件分包异步 <a class="header-anchor" href="#style-isolation" aria-label="Permalink to &quot;样式隔离与组件分包异步 {#style-isolation}&quot;">​</a></h3><p>在小程序中，自定义组件的样式默认是隔离的，web中通过全局样式访问原子类的方式不再生效，不过由于小程序提供了<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html#%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F%E9%9A%94%E7%A6%BB" target="_blank" rel="noreferrer">样式隔离配置</a>，我们可以将该组件样式隔离配置调整为<code>apply-shared</code>来获取页面或app中定义的原子类，但是当我们在使用传统类名和原子类混合开发或者迁移原子类的过程中，我们往往希望保留原本自定义组件的样式隔离。</p><p>针对这种情况，我们在<code>@mpxjs/unocss-plugin</code>中提供了<a href="./../../api/compile.html#styleIsolation"><code>styleIsolation</code>配置项</a>，可选设置为<code>isolated</code>|<code>apply-shared</code>，当设置为<code>isolated</code>时每个组件都会通过<code>@import</code>独立引用主包或者分包的原子类样式文件，因此不会受到样式隔离的影响；当设置为<code>apply-shared</code>时，只有app和分包页面会引用对应的原子类样式文件，自定义组件需要通过配置样式隔离为<code>apply-shared</code>使原子类生效。</p><p>在组件分包异步的情况下对应组件即使将样式隔离配置为<code>apply-shared</code>的情况下，<code>@mpxjs/unocss-plugin</code>也需要将<code>styleIsolation</code>设置为<code>isolated</code>才能正常工作，原因在于组件分包异步的情况下，组件被其他分包的页面所引用渲染，由于上述原子类样式分包输出的规则，其他分包的页面中可能并不包含当前组件所需的原子类，只有在<code>isolated</code>模式下由组件自身引用所需的原子类样式才能保证正常work，类似于<code>safelist</code>，我们也提供了<a href="./../../api/compile.html#commentConfig"><code>注释配置</code></a>的方式对组件的<code>styleIsolation</code>模式进行局部配置，示例如下：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- mpx_config_styleIsolation: &#39;isolated&#39; --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- 当前组件会直接引用对应主包或分包的原子类样式 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     &lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@dark:(text-white bg-dark-500)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,67),n=[a];function d(h,p,r,k,g,o){return i(),s("div",null,n)}const c=t(l,[["render",d]]);export{E as __pageData,c as default};
